import React, { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { format } from 'date-fns';
import { th } from 'date-fns/locale';
import { 
  CheckCircleIcon,
  MapPinIcon,
  ClockIcon,
  UsersIcon,
  PhoneIcon,
  ShareIcon,
  ClockIcon as HistoryIcon
} from '@heroicons/react/24/outline';
import { useBookingContext } from '../context/BookingContext';
import { useLiff } from '../hooks/useLiff';
import Button from '../components/UI/Button';

const BookingSuccess = () => {
  const navigate = useNavigate();
    const { 
    selectedBranch, 
    selectedDate, 
    selectedTime, 
    guestCount,
    selectedTable, 
    customerDetails,
    resetBooking
  } = useBookingContext();
  
  const { sendMessage, isInClient } = useLiff();

  // Generate booking reference number
  const bookingRef = `PH${Date.now().toString().slice(-6)}`;

  useEffect(() => {
    // Send confirmation message to LINE chat (if in LINE client)
    const sendConfirmationMessage = async () => {
      if (isInClient) {
        const message = {
          type: 'text',
          text: `üéâ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á: ${bookingRef}\n‡∏™‡∏≤‡∏Ç‡∏≤: ${selectedBranch?.name}\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${format(selectedDate, 'd MMM yyyy', { locale: th })}\n‡πÄ‡∏ß‡∏•‡∏≤: ${selectedTime} ‡∏ô.\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${guestCount} ‡∏Ñ‡∏ô${selectedTable ? `\n‡πÇ‡∏ï‡πä‡∏∞: ${selectedTable}` : ''}\n\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ Phicha Booking! üçΩÔ∏è`
        };
        
        try {
          await sendMessage([message]);
        } catch (error) {
          console.error('Failed to send LINE message:', error);
        }
      }
    };

    sendConfirmationMessage();
  }, [isInClient, sendMessage, bookingRef, selectedBranch, selectedDate, selectedTime, guestCount, selectedTable]);

  const handleNewBooking = () => {
    resetBooking();
    navigate('/branch');
  };

  const handleViewHistory = () => {
    navigate('/history');
  };

  const handleShareBooking = async () => {
    const shareText = `‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏£‡πâ‡∏≤‡∏ô ${selectedBranch?.name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${format(selectedDate, 'd MMMM yyyy', { locale: th })}\n‡πÄ‡∏ß‡∏•‡∏≤: ${selectedTime} ‡∏ô.\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${guestCount} ‡∏Ñ‡∏ô${selectedTable ? `\n‡πÇ‡∏ï‡πä‡∏∞: ${selectedTable}` : ''}\n‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á: ${bookingRef}`;
    
    if (navigator.share) {
      try {
        await navigator.share({
          title: '‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞ Phicha',
          text: shareText
        });
      } catch (error) {
        console.error('Share failed:', error);
      }
    } else {
      // Fallback: copy to clipboard
      try {
        await navigator.clipboard.writeText(shareText);
        alert('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!');
      } catch (error) {
        console.error('Copy failed:', error);
      }
    }
  };

  return (
    <div className="space-y-6 fade-in">
      {/* Success Header */}
      <div className="text-center">
        <div className="mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4">
          <CheckCircleIcon className="w-8 h-8 text-green-600" />
        </div>
        <h2 className="text-2xl font-bold text-gray-900 mb-2">‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h2>
        <p className="text-gray-600">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
      </div>

      {/* Booking Reference */}
      <div className="bg-green-50 border border-green-200 rounded-lg p-4 text-center">
        <h3 className="text-lg font-semibold text-green-900 mb-1">‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
        <div className="text-2xl font-bold text-green-800 font-mono">{bookingRef}</div>
        <p className="text-sm text-green-700 mt-2">
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô
        </p>
      </div>

      {/* Booking Details Card */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
        <div className="bg-primary-500 px-6 py-4">
          <h3 className="text-lg font-semibold text-white">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
        </div>
        
        <div className="p-6 space-y-4">
          {/* Branch */}
          <div className="flex items-start space-x-3">
            <MapPinIcon className="w-5 h-5 text-gray-400 mt-1 flex-shrink-0" />
            <div>
              <div className="font-medium text-gray-900">{selectedBranch?.name}</div>
              <div className="text-sm text-gray-600">{selectedBranch?.address}</div>
            </div>
          </div>

          {/* Date and Time */}
          <div className="flex items-center space-x-3">
            <ClockIcon className="w-5 h-5 text-gray-400 flex-shrink-0" />
            <div>
              <div className="font-medium text-gray-900">
                {format(selectedDate, 'EEEE ‡∏ó‡∏µ‡πà d MMMM yyyy', { locale: th })}
              </div>
              <div className="text-sm text-gray-600">‡πÄ‡∏ß‡∏•‡∏≤ {selectedTime} ‡∏ô.</div>
            </div>
          </div>

          {/* Guest Count */}
          <div className="flex items-center space-x-3">
            <UsersIcon className="w-5 h-5 text-gray-400 flex-shrink-0" />
            <div>
              <div className="font-medium text-gray-900">{guestCount} ‡∏Ñ‡∏ô</div>
              {selectedTable && (
                <div className="text-sm text-gray-600">‡πÇ‡∏ï‡πä‡∏∞ {selectedTable}</div>
              )}
            </div>
          </div>

          {/* Contact Info */}
          <div className="flex items-center space-x-3">
            <PhoneIcon className="w-5 h-5 text-gray-400 flex-shrink-0" />
            <div>
              <div className="font-medium text-gray-900">{customerDetails.name}</div>
              <div className="text-sm text-gray-600">{customerDetails.phone}</div>
            </div>
          </div>
        </div>
      </div>

      {/* Important Reminders */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h4 className="font-medium text-blue-900 mb-3">‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏à‡∏≥</h4>
        <div className="space-y-2">
          <div className="flex items-start space-x-2">
            <div className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0"></div>
            <p className="text-sm text-blue-800">
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ 5-10 ‡∏ô‡∏≤‡∏ó‡∏µ
            </p>
          </div>
          <div className="flex items-start space-x-2">
            <div className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0"></div>
            <p className="text-sm text-blue-800">
              ‡∏´‡∏≤‡∏Å‡∏°‡∏≤‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤ 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÇ‡∏ï‡πä‡∏∞‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </p>
          </div>
          <div className="flex items-start space-x-2">
            <div className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0"></div>
            <p className="text-sm text-blue-800">
              ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠ LINE ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô
            </p>
          </div>
          <div className="flex items-start space-x-2">
            <div className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0"></div>
            <p className="text-sm text-blue-800">
              ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤ 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
            </p>
          </div>
        </div>
      </div>

      {/* Contact Restaurant */}
      <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
        <h4 className="font-medium text-gray-900 mb-2">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô</h4>
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm text-gray-600">‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</p>
            <p className="font-medium text-gray-900">{selectedBranch?.phone}</p>
          </div>
          <Button
            variant="outline"
            size="sm"
            onClick={() => window.open(`tel:${selectedBranch?.phone}`)}
          >
            ‡πÇ‡∏ó‡∏£
          </Button>
        </div>
      </div>

      {/* Action Buttons */}
      <div className="space-y-3">
        <Button
          fullWidth
          onClick={handleShareBooking}
          variant="outline"
        >
          <ShareIcon className="w-4 h-4 mr-2" />
          ‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
        </Button>
        
        <div className="grid grid-cols-2 gap-3">
          <Button
            variant="outline"
            onClick={handleViewHistory}
          >
            <HistoryIcon className="w-4 h-4 mr-2" />
            ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
          </Button>
          
          <Button
            onClick={handleNewBooking}
          >
            ‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
          </Button>
        </div>
      </div>

      {/* Thank You Message */}
      <div className="text-center pt-4">
        <h3 className="text-lg font-semibold text-gray-900 mb-2">
          ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ Phicha Booking! üçΩÔ∏è
        </h3>
        <p className="text-gray-600">
          ‡πÄ‡∏£‡∏≤‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏î‡∏µ
        </p>
      </div>
    </div>
  );
};

export default BookingSuccess; 